(self.webpackChunktest_site=self.webpackChunktest_site||[]).push([[295],{3:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return d},default:function(){return p}});var i=n(2122),o=n(9756),a=(n(7294),n(3905)),r=["components"],l={sidebar_position:8},s="Detect Events",c={unversionedId:"trigger-event",id:"trigger-event",isDocsHomePage:!1,title:"Detect Events",description:"Trigger an event on a sub-component, that will get raised to the parent component",source:"@site/docs/trigger-event.md",sourceDirName:".",slug:"/trigger-event",permalink:"/angularUnitTesting/docs/trigger-event",editUrl:"https://github.com/natalyjazzviolin/angularUnitTesting/blob/main/docs/trigger-event.md",version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Integration Testing Services",permalink:"/angularUnitTesting/docs/integration-testing-services"},next:{title:"emit-event-from-child",permalink:"/angularUnitTesting/docs/emit-event-from-child"}},d=[{value:"Trigger an event on a sub-component, that will get raised to the parent component",id:"trigger-an-event-on-a-sub-component-that-will-get-raised-to-the-parent-component",children:[{value:"Setup event flow",id:"setup-event-flow",children:[]},{value:"Get a handle on all child components",id:"get-a-handle-on-all-child-components",children:[]}]},{value:"Emit event from sub-component",id:"emit-event-from-sub-component",children:[]}],m={toc:d};function p(e){var t=e.components,n=(0,o.Z)(e,r);return(0,a.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"detect-events"},"Detect Events"),(0,a.kt)("h2",{id:"trigger-an-event-on-a-sub-component-that-will-get-raised-to-the-parent-component"},"Trigger an event on a sub-component, that will get raised to the parent component"),(0,a.kt)("h3",{id:"setup-event-flow"},"Setup event flow"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"The parent component is listening for an event on the child component.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"When that event is raised by the child, the parent component will call the appropriate method."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"it('should call method on ParentComponent when the ChildComponent\\'s button is clicked', () => {\n    mockService.method.and.returnValue(of(data));\n\n    // Run ngOnInit\n    fixture.detectChanges();\n})\n")),(0,a.kt)("h3",{id:"get-a-handle-on-all-child-components"},"Get a handle on all child components"),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"A component is a subclass of a directive."),(0,a.kt)("p",{parentName:"div"},(0,a.kt)("inlineCode",{parentName:"p"},"By.directive")," will find elements that have components on them, as well as directive decorators and attributes."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// Within it()\nconst childComponents = fixture.debugElement\n    .queryAll(\n    By.directive(ChildComponent)\n    )\n\n// Check that the event-trigegred method is called\nspyOn(fixture.componentInstance, 'mockMethod');\n\n// Now we can call the event\nchildComponents[0].query(By.css('button'))\n.triggerEventHandler('click', { mockMethod: () => {} })\n\n// Expect the method to be called with specific data\nexpect(fixture.componentInstance.method)\n    .toHaveBeenCalledWith('expected data');\n")),(0,a.kt)("h2",{id:"emit-event-from-sub-component"},"Emit event from sub-component"),(0,a.kt)("p",null,"Research this more and write notes."))}p.isMDXComponent=!0}}]);