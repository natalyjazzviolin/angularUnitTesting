(self.webpackChunktest_site=self.webpackChunktest_site||[]).push([[53],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),d=s(n),m=i,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,c(c({ref:t},l),{},{components:n})):r.createElement(f,c({ref:t},l))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,c=new Array(o);c[0]=d;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a.mdxType="string"==typeof e?e:i,c[1]=a;for(var s=2;s<o;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1658:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return l},default:function(){return d}});var r=n(2122),i=n(9756),o=(n(7294),n(3905)),c=["components"],a={sidebar_position:1},u=void 0,s={unversionedId:"Routing/Overview",id:"Routing/Overview",isDocsHomePage:!1,title:"Overview",description:"Guidelines",source:"@site/docs/Routing/Overview.md",sourceDirName:"Routing",slug:"/Routing/Overview",permalink:"/angularUnitTesting/docs/Routing/Overview",editUrl:"https://github.com/natalyjazzviolin/angularUnitTesting/blob/main/docs/Routing/Overview.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Async helper function",permalink:"/angularUnitTesting/docs/Async Tests/async-helper-func"},next:{title:"Test ngModel",permalink:"/angularUnitTesting/docs/Routing/ngModel"}},l=[{value:"Guidelines",id:"guidelines",children:[{value:"Setup the TestBed object",id:"setup-the-testbed-object",children:[]},{value:"Mock the services",id:"mock-the-services",children:[]},{value:"Create the component fixture",id:"create-the-component-fixture",children:[]}]}],p={toc:l};function d(e){var t=e.components,n=(0,i.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"guidelines"},"Guidelines"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Assume that the framework works correctly."),(0,o.kt)("li",{parentName:"ol"},"Test that you are interacting with the framework correctly.")),(0,o.kt)("h3",{id:"setup-the-testbed-object"},"Setup the TestBed object"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { TestBed } from \"@angular/core/testing\";\n\ndescribe('MyComponent', () => {\n    beforeEach(() => {\n        TestBed.configureTestingModule({\n           declarations: [MyComponent],\n           providers: [\n               // Services go in here\n               ]\n        })\n    })\n})\n")),(0,o.kt)("h3",{id:"mock-the-services"},"Mock the services"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"// Within describe\nlet mockActivedRoute, mockService, fixture\n\n// Within beforeEach\nmockService = jasmine.createSpyObj(['getObject']);\nmockActivatedRoute = {\n    snapshot: { paramMap: { get: () => { return '1'; }}}\n}\n\n// Within TestBed providers: []\n{ provide: ActivatedRoute, useValue: mockActivatedRoute},\n{ provide: Service, useValue: mockService},\n")),(0,o.kt)("h3",{id:"create-the-component-fixture"},"Create the component fixture"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"fixture = TestBed.createComponent(MyComponent);")))}d.isMDXComponent=!0}}]);