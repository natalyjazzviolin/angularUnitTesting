(self.webpackChunktest_site=self.webpackChunktest_site||[]).push([[895],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return l},kt:function(){return m}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var a=r.createContext({}),u=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(a.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),f=u(t),m=i,d=f["".concat(a,".").concat(m)]||f[m]||p[m]||o;return t?r.createElement(d,s(s({ref:n},l),{},{components:t})):r.createElement(d,s({ref:n},l))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,s=new Array(o);s[0]=f;var c={};for(var a in n)hasOwnProperty.call(n,a)&&(c[a]=n[a]);c.originalType=e,c.mdxType="string"==typeof e?e:i,s[1]=c;for(var u=2;u<o;u++)s[u]=t[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},6954:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return a},metadata:function(){return u},toc:function(){return l},default:function(){return f}});var r=t(2122),i=t(9756),o=(t(7294),t(3905)),s=["components"],c={sidebar_position:3},a="Async helper function",u={unversionedId:"Async Tests/async-helper-func",id:"Async Tests/async-helper-func",isDocsHomePage:!1,title:"Async helper function",description:"This function is built for use with promises.",source:"@site/docs/Async Tests/async-helper-func.md",sourceDirName:"Async Tests",slug:"/Async Tests/async-helper-func",permalink:"/angularUnitTesting/docs/Async Tests/async-helper-func",editUrl:"https://github.com/natalyjazzviolin/angularUnitTesting/blob/main/docs/Async Tests/async-helper-func.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Write Async Test",permalink:"/angularUnitTesting/docs/Async Tests/write-async-test"},next:{title:"Overview",permalink:"/angularUnitTesting/docs/Routing/Overview"}},l=[{value:"Turn debounce funciton into promise function",id:"turn-debounce-funciton-into-promise-function",children:[]},{value:"Write new test",id:"write-new-test",children:[]}],p={toc:l};function f(e){var n=e.components,t=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"async-helper-function"},"Async helper function"),(0,o.kt)("p",null,"This function is built for use with promises."),(0,o.kt)("p",null,"Angular does not use promises (they were used in AngularJS, but they may pop-up in 3rd party libraries)."),(0,o.kt)("h3",{id:"turn-debounce-funciton-into-promise-function"},"Turn debounce funciton into promise function"),(0,o.kt)("p",null,"Save function form previous pages re-written using a promise:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"save(): void {\n    var promise = new Promise((resolve) => {\n        this.MyService.updateObject(this.object)\n            .subscribe(() => this.goBack());\n            resolve();\n    });\n}\n")),(0,o.kt)("h3",{id:"write-new-test"},"Write new test"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"import async from '@angular/core/testing'"),", not 'q'"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"// Within descirbe\nit('should do something', async(() => {\n    mockService.updateObject.and.returnValue(of({}));\n    fixture.detectChanges();\n    fixture.componentInstance.save();\n\n    // This returns a promise that resolves only when\n    // all promises within the ocmponent have been resolved.\n    fixture.whenStabel()\n    expect(mockService.updateObject).toHaveBeenCalled();\n}))\n")))}f.isMDXComponent=!0}}]);