(self.webpackChunktest_site=self.webpackChunktest_site||[]).push([[733],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),f=a,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1757:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:5},c="Shallow Integration Basics",l={unversionedId:"shallow-integration-basics",id:"shallow-integration-basics",isDocsHomePage:!1,title:"Shallow Integration Basics",description:"TestBed Object",source:"@site/docs/shallow-integration-basics.md",sourceDirName:".",slug:"/shallow-integration-basics",permalink:"/angularUnitTesting/docs/shallow-integration-basics",editUrl:"https://github.com/natalyjazzviolin/angularUnitTesting/blob/main/docs/shallow-integration-basics.md",version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Isolated Unit Tests",permalink:"/angularUnitTesting/docs/isolated-unit-tests"},next:{title:"Deep Integration Basics",permalink:"/angularUnitTesting/docs/deep-integration-test-tutorial"}},u=[{value:"TestBed Object",id:"testbed-object",children:[]}],p={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"shallow-integration-basics"},"Shallow Integration Basics"),(0,o.kt)("h2",{id:"testbed-object"},"TestBed Object"),(0,o.kt)("p",null,"TestBed is an object that creates a new module specifically for testing.\nIt takes a single parameter that's an object. This object exactly matches the layout of an app module:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"imports"),(0,o.kt)("li",{parentName:"ul"},"delarations"),(0,o.kt)("li",{parentName:"ul"},"providers"),(0,o.kt)("li",{parentName:"ul"},"bootstrap")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"beforeEach(() => {\n        TestBed.configureTestingModule({\n            declarations: [MyComponent]\n    });\n\n    // Create a test component\n    TestBed.createComponent(MyComponent);\n})\n")))}d.isMDXComponent=!0}}]);